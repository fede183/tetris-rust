const X_EXTENT: f32 = 400.;
const Y_EXTENT: f32 = 200.;

// Square base sizes
pub const SQUARE_SIZE : f32 = 20.0;

pub const VISIBLE_VERTICAL_BOARD : f32 = 20.0;
pub const HORIZONTAL_BOARD : f32 = 10.0;
pub const INVISIBLE_BOARD : f32 = 4.0;
pub const HEADER : f32 = 1.0;
pub const FOOTER : f32 = 1.0;
pub const VISIBLE_BOARD_X : f32 = 1.0;

pub const NEXT_PIECE_BLOCK_HORIZONTAL : f32 = 6.0;
pub const NEXT_PIECE_BLOCK_VERTICAL : f32 = 7.0;
pub const NEXT_PIECE_BLOCK_X : f32 = HORIZONTAL_BOARD + VISIBLE_BOARD_X + 1.0;
pub const NEXT_PIECE_BLOCK_Y : f32 = HEADER + INVISIBLE_BOARD + 3.0;

pub const HORIZONTAL_SIZE : f32 = HORIZONTAL_BOARD + NEXT_PIECE_BLOCK_HORIZONTAL + VISIBLE_BOARD_X + 2.0;
pub const VERTICAL_SIZE : f32 = VISIBLE_VERTICAL_BOARD + INVISIBLE_BOARD + HEADER + FOOTER;

pub const SCORE_HORIZONTAL : f32 = 5.0;
pub const SCORE_VERTICAL : f32 = 2.0;
pub const SCORE_X : f32 = NEXT_PIECE_BLOCK_X;
pub const SCORE_Y : f32 = NEXT_PIECE_BLOCK_Y - 2.0;

// Display sizes
pub const DISPLAY_WIDTH : f32 = SQUARE_SIZE*HORIZONTAL_SIZE;
pub const DISPLAY_HEIGTH : f32 = SQUARE_SIZE*VERTICAL_SIZE;

pub const DISPLAY_BOARD_WIDTH : f32 = SQUARE_SIZE*HORIZONTAL_BOARD;
pub const DISPLAY_BOARD_HEIGTH : f32 = SQUARE_SIZE*VISIBLE_VERTICAL_BOARD;
pub const DISPLAY_BOARD_X : f32 = SQUARE_SIZE*VISIBLE_BOARD_X - X_EXTENT;
pub const DISPLAY_BOARD_Y : f32 = SQUARE_SIZE*(INVISIBLE_BOARD + HEADER) + Y_EXTENT;

pub const DISPLAY_LOST_MESSAGE_WIDTH : f32 = 500.0;
pub const DISPLAY_LOST_MESSAGE_HEIGTH : f32 = 200.0;

pub const DISPLAY_NEXT_PIECE_BLOCK_WIDTH : f32 = SQUARE_SIZE*NEXT_PIECE_BLOCK_HORIZONTAL;
pub const DISPLAY_NEXT_PIECE_BLOCK_HEIGTH : f32 = SQUARE_SIZE*NEXT_PIECE_BLOCK_VERTICAL ;
pub const DISPLAY_NEXT_PIECE_BLOCK_POSITION_X : f32 = SQUARE_SIZE*NEXT_PIECE_BLOCK_X - X_EXTENT;
pub const DISPLAY_NEXT_PIECE_BLOCK_POSITION_Y : f32 = SQUARE_SIZE*NEXT_PIECE_BLOCK_Y + Y_EXTENT;

pub const DISPLAY_SCORE_WIGTH : f32 = SQUARE_SIZE*SCORE_HORIZONTAL;
pub const DISPLAY_SCORE_HEIGTH : f32 = SQUARE_SIZE*SCORE_VERTICAL;
pub const DISPLAY_SCORE_X : f32 = SQUARE_SIZE*SCORE_X - X_EXTENT;
pub const DISPLAY_SCORE_Y : f32 = SQUARE_SIZE*SCORE_Y + Y_EXTENT;

// Game Over Window
pub const GAME_OVER_HORIZONTAL_SIZE : f32 = 25.0;
pub const GAME_OVER_VERTICAL_SIZE : f32 = 10.0;

pub const GAME_OVER_MESSAGE_HORIZONTAL : f32 = 5.0;
pub const GAME_OVER_MESSAGE_VERTICAL : f32 = 2.0;
pub const GAME_OVER_MESSAGE_X : f32 = 2.0 - X_EXTENT;
pub const GAME_OVER_MESSAGE_Y : f32 = 4.0 + Y_EXTENT;

// Display Game Over Window
pub const GAME_OVER_DISPLAY_WIDTH : f32 = SQUARE_SIZE*GAME_OVER_HORIZONTAL_SIZE;
pub const GAME_OVER_DISPLAY_HEIGTH : f32 = SQUARE_SIZE*GAME_OVER_VERTICAL_SIZE;

pub const DISPLAY_GAME_OVER_MESSAGE_WIGTH : f32 = SQUARE_SIZE*GAME_OVER_MESSAGE_HORIZONTAL;
pub const DISPLAY_GAME_OVER_MESSAGE_HEIGTH : f32 = SQUARE_SIZE*GAME_OVER_MESSAGE_VERTICAL;
pub const DISPLAY_GAME_OVER_MESSAGE_X : f32 = SQUARE_SIZE*GAME_OVER_MESSAGE_X - X_EXTENT;
pub const DISPLAY_GAME_OVER_MESSAGE_Y : f32 = SQUARE_SIZE*GAME_OVER_MESSAGE_Y + Y_EXTENT;

// Audio
pub const MUSIC_FILE : &str = "../sounds/theme.wav";
