use bevy::prelude::LinearRgba;
use crate::game::consts::*;

pub const SQUARE_SIZE: f32 = 30.;

const WINDOW_HEIGHT: f32 = 30.;
const WINDOW_WIGTH: f32 = 30.;

pub const DISPLAY_WINDOW_HEIGHT: f32 = SQUARE_SIZE*WINDOW_HEIGHT;
pub const DISPLAY_WINDOW_WIGTH: f32 = SQUARE_SIZE*WINDOW_WIGTH;

pub const DISPLAY_BOARD_HEIGHT: f32 = SQUARE_SIZE*BOARD_HEIGHT as f32;
pub const DISPLAY_BOARD_WIGTH: f32 = SQUARE_SIZE*BOARD_WIGTH as f32;

const GAME_OVER_WINDOW_HEIGHT: f32 = 7.5;
const GAME_OVER_WINDOW_WIGTH: f32 = 10.;

pub const DISPLAY_GAME_OVER_WINDOW_HEIGHT: f32 = SQUARE_SIZE*GAME_OVER_WINDOW_HEIGHT;
pub const DISPLAY_GAME_OVER_WINDOW_WIGTH: f32 = SQUARE_SIZE*GAME_OVER_WINDOW_WIGTH;

pub const SCORE_FONT_SIZE: f32 = 20.;
const SCORE_POSITION_X: f32 = (BOARD_WIGTH as f32 / 2.) + 5.;
const SCORE_POSITION_Y: f32 = (BOARD_HEIGHT as f32 / 2.) - 1.;

pub const DISPLAY_SCORE_POSITION_X: f32 = -SQUARE_SIZE*SCORE_POSITION_X;
pub const DISPLAY_SCORE_POSITION_Y: f32 = SQUARE_SIZE*SCORE_POSITION_Y;
pub const DISPLAY_LINES_POSITION_Y: f32 = SQUARE_SIZE*(SCORE_POSITION_Y - 1.);

pub const BORDER_SIZE: f32 = 20.;

const FIRST_BOARD_POSITION_X: f32 = 5.;
const FIRST_BOARD_POSITION_Y: f32 = 10.;

pub const DISPLAY_FIRST_BOARD_POSITION_X: f32 = -SQUARE_SIZE*(FIRST_BOARD_POSITION_X - 0.5);
pub const DISPLAY_FIRST_BOARD_POSITION_Y: f32 = SQUARE_SIZE*(FIRST_BOARD_POSITION_Y - 0.5);

pub const NEXT_PIECE_POSITION_X: f32 = 10.;
pub const NEXT_PIECE_POSITION_Y: f32 = 0.;

pub const DISPLAY_NEXT_PIECE_POSITION_X: f32 = SQUARE_SIZE*NEXT_PIECE_POSITION_X;
pub const DISPLAY_NEXT_PIECE_POSITION_Y: f32 = SQUARE_SIZE*NEXT_PIECE_POSITION_Y;

const NEXT_PIECE_HEIGHT: f32 = 6.;
const NEXT_PIECE_WIGTH: f32 = 6.;

pub const DISPLAY_NEXT_PIECE_HEIGHT: f32 = SQUARE_SIZE*NEXT_PIECE_HEIGHT;
pub const DISPLAY_NEXT_PIECE_WIGTH: f32 = SQUARE_SIZE*NEXT_PIECE_WIGTH;

const FIRST_NEXT_PIECE_POSITION_X: f32 = 1.0;
const FIRST_NEXT_PIECE_POSITION_Y: f32 = 1.0;

pub const DISPLAY_FIRST_NEXT_PIECE_POSITION_X: f32 = SQUARE_SIZE*(-FIRST_NEXT_PIECE_POSITION_X + NEXT_PIECE_POSITION_X);
pub const DISPLAY_FIRST_NEXT_PIECE_POSITION_Y: f32 = SQUARE_SIZE*(-FIRST_NEXT_PIECE_POSITION_Y + NEXT_PIECE_POSITION_Y);

pub const BOARD_COLOR: LinearRgba = LinearRgba::BLACK;
pub const SCORE_COLOR: LinearRgba = LinearRgba::new(255., 51., 255., 255.);
pub const BORDER_COLOR: LinearRgba = LinearRgba::new(150., 150., 150., 255.);
pub const BORDER_SQUARE_COLOR: LinearRgba = LinearRgba::new(192., 192., 192., 255.);
